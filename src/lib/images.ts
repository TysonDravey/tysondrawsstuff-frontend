import { StrapiImage } from './api';

// Import the image map generated by sync-images script
interface LocalImage {
  id: number;
  url: string;
  alternativeText: string;
  width: number;
  height: number;
  originalUrl: string;
}

type ImageMap = Record<string, LocalImage[]>;

// Import image map on both server and client
let imageMap: ImageMap;
try {
  // eslint-disable-next-line @typescript-eslint/no-require-imports
  imageMap = require('../../public/image-map.json') as ImageMap;
} catch {
  // Fallback if image map can't be loaded
  imageMap = {};
}

/**
 * Get static image URL for a product image
 * Uses only static images - no Strapi fallback for fully static site
 */
export function getProductImageUrl(productSlug: string, strapiImage: StrapiImage, index = 0): string {
  // Try to get static image first
  const productImages = imageMap[productSlug];
  if (productImages && productImages[index]) {
    return productImages[index].url;
  }

  // No fallback to Strapi - site is fully static
  // Return placeholder if image not found in static files
  return '/images/placeholder.jpg';
}

/**
 * Get all static images for a product
 * Uses only static images - no Strapi fallback for fully static site
 */
export function getProductImages(productSlug: string, _strapiImages: StrapiImage[] = []): Array<{
  src: string;
  alt: string;
  width?: number;
  height?: number;
}> {
  const productImages = imageMap[productSlug];

  if (productImages && productImages.length > 0) {
    // Use static images
    return productImages.map((img: LocalImage) => ({
      src: img.url,
      alt: img.alternativeText,
      width: img.width,
      height: img.height
    }));
  }

  // No fallback to Strapi - site is fully static
  // Return empty array if images not found in static files
  return [];
}

/**
 * Get static URL for static assets (show logos, etc.)
 * Extracts filename from Strapi path and looks for it in /public/static/
 */
export function getStaticAssetUrl(strapiPath: string): string {
  if (!strapiPath) {
    return '/images/placeholder.jpg';
  }

  // Extract filename from Strapi URL path
  // e.g., "/uploads/show_logo_123.jpg" -> "show_logo_123.jpg"
  const filename = strapiPath.split('/').pop();

  if (filename) {
    // Return path to static folder
    return `/static/${filename}`;
  }

  return '/images/placeholder.jpg';
}

/**
 * Get the site logo URL
 * Logo is served from /public/static/logo.png
 */
export function getLogoUrl(): string {
  return '/static/logo.png';
}

/**
 * Check if we're using static images (image map exists)
 */
export function isUsingStaticImages(): boolean {
  return Object.keys(imageMap).length > 0;
}